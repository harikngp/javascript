{"ast":null,"code":"import api from './service/api';\nexport default {\n  data() {\n    return {\n      link: process.env.VUE_APP_ASSESSMENT,\n      info: [],\n      dialog: false,\n      flag: true,\n      item: '',\n      customer: {\n        id: '',\n        name: '',\n        branch: ''\n      },\n      ruleId: [id => !!id || 'required', v => /^[0-9]+$/.test(v) || 'Not a number'],\n      ruleName: [name => !!name.test(name) || 'required', v => v.length > 0 && /^[a-Z]/ || 'Invalid name']\n    };\n  },\n\n  mounted() {\n    this.read();\n  },\n\n  methods: {\n    async read() {\n      await api.get(this.link + '/customer/read').then(res => {\n        this.info = res.data, console.log(res.data);\n      });\n    },\n\n    async create() {\n      this.flag = true;\n      this.dialog = true;\n      await api.post(this.link + '/customer/create', this.customer).then(res => {\n        this.info = res.data, console.log(res.data);\n      });\n      this.dialog = false;\n      await this.read();\n    },\n\n    edit(item) {\n      this.flag = false;\n      this.dialog = true;\n      this.customer = {\n        id: item.id,\n        name: item.name\n      };\n    },\n\n    async update() {\n      await api.update(this.link + '/customer/update', this.customer).then(res => {\n        this.info = res.data;\n      });\n      this.dialog = false;\n      await this.read(), this.flag = true;\n    },\n\n    async del(id) {\n      await api.del(this.link + '/customer/delete/' + id);\n      await this.read();\n    },\n\n    async searching(resp) {\n      await api.post(this.link + '/customer/search', resp).then(res => {\n        this.info = res.data;\n      });\n    },\n\n    async asc(val, item) {\n      await api.post(this.link + val, item).then(res => {\n        this.info = res.data;\n      });\n    },\n\n    async desc(val, item) {\n      await api.post(this.link + val, item).then(res => {\n        this.info = res.data;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8EA;AAEA;EACAA;IACA;MACAC,oCADA;MAEAC,QAFA;MAGAC,aAHA;MAIAC,UAJA;MAKAC,QALA;MAMAC;QACAC,MADA;QAEAC,QAFA;QAGAC;MAHA,CANA;MAWAC,SACAH,wBADA,EAEAI,yCAFA,CAXA;MAeAC,WACAJ,uCADA,EAEAG,+CAFA;IAfA;EAoBA,CAtBA;;EAwBAE;IACA;EACA,CA1BA;;EA4BAC;IAEA;MACA,4CACAC,IADA,CACAC;QACA;MACA,CAHA;IAIA,CAPA;;IASA;MACA;MACA;MACA,8DACAD,IADA,CACAC;QAAA;MAAA,CADA;MAEA;MACA;IACA,CAhBA;;IAkBAC;MACA;MACA;MACA;QACAV,WADA;QAEAC;MAFA;IAIA,CAzBA;;IA2BA;MACA,gEACAO,IADA,CACAC;QAAA;MAAA,CADA;MAEA;MACA,mBACA,gBADA;IAEA,CAjCA;;IAmCA;MACA;MACA;IACA,CAtCA;;IAwCA;MACA,qDACAD,IADA,CACAC;QAAA;MAAA,CADA;IAEA,CA3CA;;IA6CA;MACA,sCACAD,IADA,CACAC;QAAA;MAAA,CADA;IAEA,CAhDA;;IAkDA;MACA,sCACAD,IADA,CACAC;QAAA;MAAA,CADA;IAEA;;EArDA;AA5BA","names":["data","link","info","dialog","flag","item","customer","id","name","branch","ruleId","v","ruleName","mounted","methods","then","res","edit"],"sourceRoot":"src/components","sources":["CustomerTable.vue"],"sourcesContent":["<template>\n  <v-app>\n      <SearchBar @search=\"searching\"/>\n      <v-form>\n\n<v-dialog v-model=\"dialog\" width=\"750\"> \n\n<template v-slot:activator=\"{ on, attrs }\">\n<v-flex text-right align-right>\n  <v-btn\n    color=\"primary\"\n    v-bind=\"attrs\"\n    v-on=\"on\">\n    <v-icon>mdi-plus</v-icon>\n  </v-btn>\n</v-flex>\n</template>\n\n<v-card class=\"white\">\n<v-text-field \n  v-model=\"customer.id\"\n  :rules=\"ruleId\"\n  label=\"id\"\n  required>\n  Id\n</v-text-field>\n\n<v-text-field \n  v-model=\"customer.name\"\n  :rules=\"ruleName\"\n  label=\"name\"\n  required>\n  Name\n</v-text-field>\n\n<v-btn \n  color=\"success\" \n  @click=\"create\"\n  v-if=\"flag\">\n  Submit\n</v-btn>\n\n<v-btn\n  color=\"success\"\n  @click=\"update\"\n  v-if=\"!flag\">\n  Edit\n</v-btn>\n</v-card>\n</v-dialog>\n</v-form>        \n      <v-simple-table>\n          <thead>\n              <tr>\n                  <th>ID\n                      <button @click=\"asc('/customer/asc',{item:'id'})\"><v-icon small>mdi-arrow-up</v-icon></button>\n                      <button @click=\"desc('/customer/desc',{item:'id'})\"><v-icon small>mdi-arrow-down</v-icon></button>\n                  </th>\n                  <th>Name\n                      <button @click=\"asc('/customer/asc',{item:'name'})\"><v-icon small>mdi-arrow-up</v-icon></button>\n                      <button @click=\"desc('/customer/desc',{item:'name'})\"><v-icon small>mdi-arrow-down</v-icon></button>\n                  </th>\n                  <th>No. of branch</th>\n              </tr>\n          </thead>\n          <tbody>\n              <tr v-for=\"(item,i) in info\" :key=\"i\">\n                  <td>{{item.id}}</td>\n                  <td>{{item.name}}</td>\n                  <td>{{item.branch}}</td>\n                  <td><v-btn @click=\"edit(item)\"><v-icon small>mdi-pencil</v-icon></v-btn></td>\n                  <td><v-btn @click=\"del(item.id)\"><v-icon small>mdi-delete</v-icon></v-btn></td>\n              </tr>\n          </tbody>\n      </v-simple-table>\n  </v-app>\n</template>\n<script>\nimport api from './service/api'\n\nexport default {\n  data(){\n      return{\n          link:process.env.VUE_APP_ASSESSMENT,\n          info:[],\n          dialog:false,\n          flag:true,\n          item:'',\n          customer:{\n              id:'',\n              name:'',\n              branch:'',\n          },\n          ruleId: [\n            id=>!!id|| 'required',\n            v=> /^[0-9]+$/.test(v) || 'Not a number'\n          ],\n          ruleName: [\n            name=>!!name.test(name)||'required',\n            v=>v.length>0 && /^[a-Z]/ || 'Invalid name'\n          ],\n      }\n  },\n\n  mounted(){\n      this.read()\n  },\n\n  methods:{\n\n      async read(){\n          await api.get(this.link+'/customer/read')\n          .then((res)=>{\n              this.info=res.data,console.log(res.data)\n          })\n      },\n\n      async create() {\n          this.flag=true \n          this.dialog=true\n          await api.post(this.link+'/customer/create',this.customer)\n          .then((res)=>{this.info=res.data,console.log(res.data)})\n          this.dialog = false;\n          await this.read()\n      },\n\n      edit(item) {\n          this.flag = false;\n          this.dialog = true;\n          this.customer={\n              id : item.id,\n              name :item.name\n          }\n      },\n\n      async update() {\n          await api.update(this.link+'/customer/update',this.customer)\n          .then((res)=>{this.info=res.data})\n          this.dialog = false;\n          await this.read(),\n          this.flag = true;\n      },\n\n      async del(id) {\n          await api.del(this.link+'/customer/delete/'+id)\n          await this.read()\n      },\n\n    async searching(resp){\n      await api.post(this.link+'/customer/search',resp)\n      .then((res)=>{this.info=res.data})\n    },\n\n    async asc(val,item){\n      await api.post(this.link+val,item)\n      .then((res)=>{this.info=res.data})\n    },\n\n    async desc(val,item){\n      await api.post(this.link+val,item)\n      .then((res)=>{this.info=res.data})\n    },\n\n  },\n\n}\n</script>"]},"metadata":{},"sourceType":"module"}